name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    services:
      mysql:
        image: mysql:8.0
        # 1. Mapeia a porta do container para o host. Essencial para a conexão.
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: 'password'
          MYSQL_DATABASE: 'test_db'
        # 2. O health-check usa 127.0.0.1 para verificar a porta mapeada.
        options: >-
          --health-cmd "mysqladmin ping -h 127.0.0.1 -u root -ppassword"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Apply database migrations
      run: npx prisma migrate deploy
      env:
        # 3. A URL de conexão usa 127.0.0.1, que agora aponta para o container MySQL.
        DATABASE_URL: "mysql://root:password@127.0.0.1:3306/test_db"

    - name: Run linter
      run: npm run lint

    - name: Run tests
      run: npm test
      env:
        # 4. A mesma URL é usada para os testes.
        DATABASE_URL: "mysql://root:password@127.0.0.1:3306/test_db"